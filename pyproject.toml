[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "vijil-dome"
version = "1.2.3"
description = ""
authors = [
    "Pradeep Das <pradeep@vijil.ai>",
    "Varun Cherukuri <varun@vijil.ai>",
    "Anuj Tambwekar <anuj@vijil.ai>",
    "Subho Majumdar <subho@vijil.ai>"
]
readme = "README.md"
exclude = [
    "vijil_dome/examples",
    "vijil_dome/tutorials"
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

openai = "^1.93.2"
pydantic = "^2.11.7"
torch = "^2.7.1"
transformers = "^4.53.1"
sentence-transformers = "^5.0.0"
numpy = "^1.26.4"
scipy = "^1.16.0"
pandas = "^2.3.1"
pytest = "^8.4.1"
pytest-asyncio = "^1.0.0"
tqdm = "^4.67.1"
flashtext = "^2.7"
presidio_analyzer = "^2.2.358"
presidio_anonymizer = "^2.2.358"
detect-secrets = "^1.5.0"
google-api-python-client = {version = "^2.176.0", optional = true}
huggingface-hub = "^0.33.2"
litellm = "^1.74.0.post1"
annoy = {version = "^1.17.3", optional = true}
nest-asyncio = "^1.6.0"
python-dotenv = "^1.1.1"
toml = "^0.10.2"
grpcio = "^1.73.1"

# opentelemetry stack — used heavily in your instrumentation
opentelemetry-api = {version = "^1.34.1", optional = true}
opentelemetry-exporter-gcp-monitoring = {version = "^1.9.0a0", optional = true}
opentelemetry-exporter-gcp-trace = {version = "^1.9.0", optional = true}
opentelemetry-exporter-otlp = {version = "^1.34.1", optional = true}
opentelemetry-exporter-otlp-proto-common = {version = "^1.34.1", optional = true}
opentelemetry-exporter-otlp-proto-grpc = {version = "^1.34.1", optional = true}
opentelemetry-exporter-otlp-proto-http = {version = "^1.34.1", optional = true}
opentelemetry-instrumentation = {version = "^0.55b1", optional = true}
opentelemetry-instrumentation-asyncio = {version = "^0.55b1", optional = true}
opentelemetry-instrumentation-logging = {version = "^0.55b1", optional = true}
opentelemetry-instrumentation-threading = {version = "^0.55b1", optional = true}
opentelemetry-propagator-gcp = {version = "^1.9.0", optional = true}
opentelemetry-proto = {version = "^1.34.1", optional = true}
opentelemetry-resourcedetector-gcp = {version = "^1.9.0a0", optional = true}
opentelemetry-sdk = {version = "^1.34.1", optional = true}
opentelemetry-semantic-conventions = {version = "^0.55b1", optional = true}

[tool.poetry.extras]
opentelemetry = [
    "opentelemetry-api",
    "opentelemetry-exporter-gcp-monitoring",
    "opentelemetry-exporter-gcp-trace",
    "opentelemetry-exporter-otlp",
    "opentelemetry-exporter-otlp-proto-common",
    "opentelemetry-exporter-otlp-proto-grpc",
    "opentelemetry-exporter-otlp-proto-http",
    "opentelemetry-instrumentation",
    "opentelemetry-instrumentation-asyncio",
    "opentelemetry-instrumentation-logging",
    "opentelemetry-instrumentation-threading",
    "opentelemetry-propagator-gcp",
    "opentelemetry-proto",
    "opentelemetry-resourcedetector-gcp",
    "opentelemetry-sdk",
    "opentelemetry-semantic-conventions",
]
embeddings = [ "annoy", ]
langchain = [ ]  # no langchain usage detected — you can add back if needed
google = [ "google-api-python-client", ]
