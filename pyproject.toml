[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "vijil-dome"
version = "1.0.8"
description = ""
authors = [
    "Pradeep Das <pradeep@vijil.ai>",
    "Varun Cherukuri <varun@vijil.ai>",
    "Anuj Tambwekar <anuj@vijil.ai>",
    "Subho Majumdar <subho@vijil.ai>"
]
readme = "README.md"
exclude = [
    "vijil_dome/examples",
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

openai = "1.75.0"
pydantic = "2.8.2"
torch = "2.6.0"
transformers = "4.48.0"
sentence-transformers = "3.3.1"
numpy = "1.26.0"
scipy = "1.14.1"
pandas = "2.2.3"
pytest = "8.3.4"
pytest-asyncio = "0.24.0"
tqdm = "4.66.5"
flashtext = "2.7"
presidio_analyzer = "2.2.355"
presidio_anonymizer = "2.2.355"
detect-secrets = "1.5.0"
google-api-python-client = "2.157.0"
huggingface-hub = "0.26.3"
litellm = "1.70.2"
annoy = "1.17.3"
nest-asyncio = "^1.6.0"
python-dotenv = "1.0.1"
toml = "0.10.2"
grpcio = "1.68.1"

# opentelemetry stack — used heavily in your instrumentation
opentelemetry-api = "1.28.1"
opentelemetry-exporter-gcp-monitoring = "1.7.0a0"
opentelemetry-exporter-gcp-trace = "1.9.0"
opentelemetry-exporter-otlp = "^1.28.1"
opentelemetry-exporter-otlp-proto-common = "^1.28.1"
opentelemetry-exporter-otlp-proto-grpc = "^1.28.1"
opentelemetry-exporter-otlp-proto-http = "^1.28.1"
opentelemetry-instrumentation = "0.49b1"
opentelemetry-instrumentation-asyncio = "0.49b1"
opentelemetry-instrumentation-logging = "0.49b1"
opentelemetry-instrumentation-threading = "0.49b1"
opentelemetry-propagator-gcp = "1.7.0"
opentelemetry-proto = ">=1.28.1"
opentelemetry-resourcedetector-gcp = "1.7.0a0"
opentelemetry-sdk = "1.28.1"
opentelemetry-semantic-conventions = "0.49b1"

[tool.poetry.extras]
opentelemetry = [
    "opentelemetry-api",
    "opentelemetry-exporter-gcp-monitoring",
    "opentelemetry-exporter-gcp-trace",
    "opentelemetry-exporter-otlp",
    "opentelemetry-exporter-otlp-proto-common",
    "opentelemetry-exporter-otlp-proto-grpc",
    "opentelemetry-exporter-otlp-proto-http",
    "opentelemetry-instrumentation",
    "opentelemetry-instrumentation-asyncio",
    "opentelemetry-instrumentation-logging",
    "opentelemetry-instrumentation-threading",
    "opentelemetry-propagator-gcp",
    "opentelemetry-proto",
    "opentelemetry-resourcedetector-gcp",
    "opentelemetry-sdk",
    "opentelemetry-semantic-conventions",
]
embeddings = [ "annoy", ]
langchain = [ ]  # no langchain usage detected — you can add back if needed
google = [ "google-api-python-client", ]
